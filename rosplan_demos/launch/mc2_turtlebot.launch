<?xml version="1.0"?>
<!-- ROSPlan turtlebot -->
<launch>

	<!-- ********* -->
	<!-- turtlebot -->
	<!-- ********* -->

	<!-- turtlebot -->
	<include file="$(find turtlebot_bringup)/launch/minimal.launch" >
	</include>
	<include file="$(find turtlebot_navigation)/launch/amcl_mc2.launch" >
		<arg name="map_file" value="/home/michael/maps/map_studies.yaml" />
	</include>
	<include file="$(find kobuki_auto_docking)/launch/minimal.launch" >
	</include>

	<!-- ******* -->
	<!-- ROSPlan -->
	<!-- ******* -->

	<!-- data paths -->
	<param name="/rosplan/data_path" value="$(find rosplan_planning_system)/common/" />
	<param name="/rosplan/planner_path" value="$(find rosplan_planning_system)/common/bin/" />

	<!-- domain file -->
	<param name="/rosplan/domain_path" value="$(find rosplan_demos)/common/domain_turtlebot.pddl" />

	<!-- knowledge base -->
	<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
	    <param name="database_path" value="$(find rosplan_knowledge_base)/common/mongoDB/" />
		<!-- conditional planning flags -->
		<param name="use_unknowns" value="False" />
	</node>

	<!-- scene database (MongoDB) -->
	<include file="$(find mongodb_store)/launch/mongodb_store.launch">
		<arg name="db_path" value="$(find rosplan_knowledge_base)/common/mongoDB/"/>
	</include>

	<!-- planning system -->
	<node name="rosplan_planning_system" pkg="rosplan_planning_system" type="planner" respawn="false" output="screen">
		<!-- directory for generated files -->
		<param name="data_path" value="$(find rosplan_planning_system)/common/" />
		<param name="problem_path" value="$(find rosplan_planning_system)/common/problem.pddl" />
		<param name="strl_file_path" value="$(find rosplan_planning_system)/common/plan.strl" />

		<!-- to run the planner -->
		<param name="planner_command" value="timeout 10 $(find rosplan_planning_system)/common/bin/popf -n DOMAIN PROBLEM" />
		<param name="generate_default_problem" value="true" />
		<param name="max_dispatch_attempts" value="2" />
	</node>


	<!-- ********** -->
	<!-- interfaces -->
	<!-- ********** -->

	<param name="waypoint_file" value="$(find rosplan_demos)/scripts/waypoint_file.txt" />

	<node name="rosplan_roadmap_server" pkg="rosplan_interface_mapping" type="rpsimplemapServer" respawn="false" output="screen">
	    <param name="data_path" value="$(find rosplan_planning_system)/common/" />
	    <param name="fixed_frame" value="map" />
	</node>

	<node name="rosplan_interface_movebase" pkg="rosplan_interface_movebase" type="rpmovebase" respawn="false" output="screen">
		<param name="action_server" value="/move_base" />
		<param name="pddl_action_name" value="goto_waypoint" />
	</node>

	<node name="rosplan_interface_localiser" pkg="rosplan_interface_turtlebot2" type="rplocaliser" respawn="false" output="screen"></node>
	<node name="rosplan_interface_docker" pkg="rosplan_interface_turtlebot2" type="rpdocker" respawn="false" output="screen"></node>
	<node name="rosplan_interface_talker" pkg="rosplan_interface_turtlebot2" type="rptalker" respawn="false" output="screen"></node>

</launch>
